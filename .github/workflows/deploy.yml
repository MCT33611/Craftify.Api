name: Deploy to EC2
on:
  push:
    branches:
      - '*'
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '8.0.x'

    - name: Build the application
      run: |
        dotnet restore
        dotnet publish -c Release -o ./publish

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Ensure destination directory exists
      run: ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.HOST_DNS }} 'mkdir -p ~/var/www/craftify/Craftify.Api/publish'

    - name: Copy files via rsync
      run: rsync -avz --delete -e "ssh -o StrictHostKeyChecking=no" ./publish/ ec2-user@${{ secrets.HOST_DNS }}:~/var/www/craftify/Craftify.Api/publish/

    - name: Check service configuration
      run: |
        ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.HOST_DNS }} << 'EOF'
          echo "Checking service file..."
          sudo cat /etc/systemd/system/craftify-api-service.service
          
          echo "Checking file permissions..."
          ls -l ~/var/www/craftify/Craftify.Api/
          
          echo "Checking SELinux status..."
          sestatus
        EOF

    - name: Publish and restart API
      run: |
        ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.HOST_DNS }} << 'EOF'
          set -e
          echo "Navigating to target directory..."
          cd ~/var/www/craftify/Craftify.Api/
          
          echo "Stopping the current API service..."
          sudo systemctl stop craftify-api-service || echo "No running service found."
          
          echo "Starting the API service..."
          sudo systemctl start craftify-api-service
          
          echo "Checking API service status..."
          if ! sudo systemctl is-active --quiet craftify-api-service; then
            echo "Failed to start API service. Checking logs..."
            sudo journalctl -u craftify-api-service -n 50 --no-pager
            exit 1
          else
            echo "API service started successfully"
          fi
          
          echo "Restarting Nginx to ensure it picks up any changes..."
          sudo systemctl restart nginx
          
          echo "Checking Nginx status..."
          if ! sudo systemctl is-active --quiet nginx; then
            echo "Failed to restart Nginx. Checking logs..."
            sudo journalctl -u nginx -n 50 --no-pager
            exit 1
          else
            echo "Nginx restarted successfully"
          fi
        EOF

